; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\smpl_hid_io.o --depend=.\obj\smpl_hid_io.d --feedback=.\obj\Smpl_HID_IO.fed --cpu=Cortex-M0 --apcs=interwork -O0 -I.\ -I..\..\..\..\CMSIS\CM0\CoreSupport -I..\..\..\..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC1xx -I..\..\..\Include -I..\..\..\Include\Driver -I..\..\..\Include\NUC1xx-LB_002 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x --omf_browse=.\obj\smpl_hid_io.crf Smpl_HID_IO.c]
                          THUMB

                          AREA ||i.Delay||, CODE, READONLY, ALIGN=1

                  Delay PROC
;;;16     
;;;17     void Delay(uint32_t delayCnt)
000000  e001              B        |L1.6|
                  |L1.2|
;;;18     {
;;;19         while(delayCnt--)
;;;20         {
;;;21             __NOP();
000002  bf00              NOP      
;;;22             __NOP();
000004  bf00              NOP      
                  |L1.6|
000006  4601              MOV      r1,r0                 ;19
000008  1e40              SUBS     r0,r0,#1              ;19
00000a  2900              CMP      r1,#0                 ;19
00000c  d1f9              BNE      |L1.2|
;;;23         }
;;;24     }
00000e  4770              BX       lr
;;;25     
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;28     /*---------------------------------------------------------------------------------------------------------*/
;;;29     int32_t main (void)
000000  b50e              PUSH     {r1-r3,lr}
;;;30     {
;;;31     //	extern uint32_t SystemFrequency;
;;;32     
;;;33     #ifdef DEBUG
;;;34     	STR_UART_T sParam;
;;;35     
;;;36     	/* Set UART Pin */
;;;37     	DrvGPIO_InitFunction(E_FUNC_UART0);
000002  2029              MOVS     r0,#0x29
000004  f7fffffe          BL       DrvGPIO_InitFunction
;;;38     	
;;;39     	/* UART Setting */
;;;40         sParam.u32BaudRate 		= 115200;
000008  20e1              MOVS     r0,#0xe1
00000a  0240              LSLS     r0,r0,#9
00000c  9000              STR      r0,[sp,#0]
;;;41         sParam.u8cDataBits 		= DRVUART_DATABITS_8;
00000e  2103              MOVS     r1,#3
000010  4668              MOV      r0,sp
000012  7101              STRB     r1,[r0,#4]
;;;42         sParam.u8cStopBits 		= DRVUART_STOPBITS_1;
000014  2100              MOVS     r1,#0
000016  7141              STRB     r1,[r0,#5]
;;;43         sParam.u8cParity 		= DRVUART_PARITY_NONE;
000018  7181              STRB     r1,[r0,#6]
;;;44         sParam.u8cRxTriggerLevel= DRVUART_FIFO_1BYTES;
00001a  71c1              STRB     r1,[r0,#7]
;;;45     
;;;46      	/* Select UART Clock Source From 12Mhz*/
;;;47     	DrvSYS_SelectIPClockSource(E_SYS_UART_CLKSRC,0); 
00001c  2006              MOVS     r0,#6
00001e  f7fffffe          BL       DrvSYS_SelectIPClockSource
;;;48     
;;;49     	/* Set UART Configuration */
;;;50     	DrvUART_Open(UART_PORT0,&sParam);
000022  4669              MOV      r1,sp
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       DrvUART_Open
;;;51     #endif
;;;52     
;;;53         UNLOCKREG();
00002a  2059              MOVS     r0,#0x59
00002c  4917              LDR      r1,|L2.140|
00002e  6008              STR      r0,[r1,#0]
000030  2016              MOVS     r0,#0x16
000032  6008              STR      r0,[r1,#0]
000034  2088              MOVS     r0,#0x88
000036  6008              STR      r0,[r1,#0]
;;;54     
;;;55         SYSCLK->PWRCON.XTL12M_EN = 1;
000038  4815              LDR      r0,|L2.144|
00003a  6800              LDR      r0,[r0,#0]
00003c  0840              LSRS     r0,r0,#1
00003e  0040              LSLS     r0,r0,#1
000040  1c40              ADDS     r0,r0,#1
000042  4913              LDR      r1,|L2.144|
000044  6008              STR      r0,[r1,#0]
;;;56     
;;;57     #ifdef DEBUG
;;;58          printf("CPU has been hold. Press any SW30 to continue...\n");
000046  a013              ADR      r0,|L2.148|
000048  f7fffffe          BL       __2printf
;;;59     #endif
;;;60         HID_Init();
00004c  f7fffffe          BL       HID_Init
;;;61         /* Enable PLL */
;;;62         DrvSYS_SetPLLMode(0);
000050  2000              MOVS     r0,#0
000052  f7fffffe          BL       DrvSYS_SetPLLMode
;;;63     	Delay(1000);
000056  207d              MOVS     r0,#0x7d
000058  00c0              LSLS     r0,r0,#3
00005a  f7fffffe          BL       Delay
;;;64     
;;;65     	/* Switch to PLL clock */
;;;66     	DrvSYS_SelectHCLKSource(2);    
00005e  2002              MOVS     r0,#2
000060  f7fffffe          BL       DrvSYS_SelectHCLKSource
;;;67         Delay(100);
000064  2064              MOVS     r0,#0x64
000066  f7fffffe          BL       Delay
;;;68     
;;;69         /* Update system core clock */
;;;70         SystemCoreClockUpdate();
00006a  f7fffffe          BL       SystemCoreClockUpdate
;;;71     
;;;72     #ifdef DEBUG    
;;;73         printf("NUC100 USB HID\n");
00006e  a016              ADR      r0,|L2.200|
000070  f7fffffe          BL       __2printf
;;;74     #endif
;;;75     
;;;76         Initial_pannel();  //call initial pannel function
000074  f7fffffe          BL       Initial_pannel
;;;77         clr_all_pannal();  //clear all pannel
000078  f7fffffe          BL       clr_all_pannal
;;;78         print_lcd(0, "Initial USB   ");		//printf information
00007c  a116              ADR      r1,|L2.216|
00007e  2000              MOVS     r0,#0
000080  f7fffffe          BL       print_lcd
;;;79     	
;;;80         /* Execute HID process */
;;;81     	HID_MainProcesss();
000084  f7fffffe          BL       HID_MainProcesss
;;;82     
;;;83     }
000088  2000              MOVS     r0,#0
00008a  bd0e              POP      {r1-r3,pc}
;;;84     
                          ENDP

                  |L2.140|
                          DCD      0x50000100
                  |L2.144|
                          DCD      0x50000200
                  |L2.148|
000094  43505520          DCB      "CPU has been hold. Press any SW30 to continue...\n",0
000098  68617320
00009c  6265656e
0000a0  20686f6c
0000a4  642e2050
0000a8  72657373
0000ac  20616e79
0000b0  20535733
0000b4  3020746f
0000b8  20636f6e
0000bc  74696e75
0000c0  652e2e2e
0000c4  0a00    
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L2.200|
0000c8  4e554331          DCB      "NUC100 USB HID\n",0
0000cc  30302055
0000d0  53422048
0000d4  49440a00
                  |L2.216|
0000d8  496e6974          DCB      "Initial USB   ",0
0000dc  69616c20
0000e0  55534220
0000e4  202000  
0000e7  00                DCB      0

                  __ARM_use_no_argv EQU 0
